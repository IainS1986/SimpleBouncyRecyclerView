ext {
    bintrayRepo = 'Simple-Bouncy-Recycler'
    bintrayName = 'com.stanford.simplebouncyrecycler'

    publishedGroupId = 'com.stanford'
    libraryName = 'simplebouncyrecycler'
    artifact = 'simplebouncyrecycler'

    libraryDescription = 'Simple Bouncy RecyclerView'

    siteUrl = 'https://github.com/IainS1986/SimpleBouncyRecyclerView'
    issueUrl = 'https://github.com/IainS1986/SimpleBouncyRecyclerView/issues'
    gitUrl = 'https://github.com/IainS1986/SimpleBouncyRecyclerView.git'

    libraryVersion = '0.0.2'

    developerId = 'iains1986'
    developerName = 'Iain Stanford'
    developerEmail = 'i_stanford@hotmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

// Maven
apply plugin: 'com.github.dcendents.android-maven'

//android.libraryVariants.all { variant ->
//    def name = variant.buildType.name.capitalize()
//    def task = project.tasks.create "jar${name}", Jar
//    task.dependsOn variant.javaCompiler
//    task.from variant.javaCompiler.destinationDir
//    task.exclude '**/BuildConfig.class'
//    task.exclude '**/R.class'
//    task.exclude '**/R$*.class'
//    artifacts.add('archives', task)
//}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

artifacts {
//    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {

        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                name libraryName
                description libraryDescription
                url siteUrl

                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

// Bintray
apply plugin: 'com.jfrog.bintray'

group = publishedGroupId
version = libraryVersion

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
//    publish = true
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        issueTrackerUrl= issueUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publicDownloadNumbers = true
        version {
            gpg {
                sign = false
            }
        }
    }
}